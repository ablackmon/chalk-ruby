# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/server/v1/kube.proto

require 'google/protobuf'

require 'chalk_ruby/protos/chalk/auth/v1/permissions_pb'


descriptor_data = "\n\x1a\x63halk/server/v1/kube.proto\x12\x0f\x63halk.server.v1\x1a\x1f\x63halk/auth/v1/permissions.proto\"\xb2\x02\n\x1bGetPodStackTraceDumpRequest\x12!\n\tnamespace\x18\x01 \x01(\tH\x01R\tnamespace\x88\x01\x01\x12\x19\n\x08pod_name\x18\x02 \x01(\tR\x07podName\x12*\n\x0e\x63ontainer_name\x18\x03 \x01(\tH\x02R\rcontainerName\x88\x01\x01\x12\x1f\n\nprocess_id\x18\x04 \x01(\x05H\x00R\tprocessId\x12#\n\x0cprocess_name\x18\x05 \x01(\tH\x00R\x0bprocessName\x12\x30\n\x13\x61uto_detect_process\x18\x06 \x01(\x08H\x00R\x11\x61utoDetectProcessB\x10\n\x0eprocess_filterB\x0c\n\n_namespaceB\x11\n\x0f_container_name\"?\n\x1cGetPodStackTraceDumpResponse\x12\x1f\n\x0bstack_trace\x18\x01 \x01(\tR\nstackTrace2\x8a\x01\n\x0bKubeService\x12{\n\x14GetPodStackTraceDump\x12,.chalk.server.v1.GetPodStackTraceDumpRequest\x1a-.chalk.server.v1.GetPodStackTraceDumpResponse\"\x06\x90\x02\x01\x80}\x0b\x42\x92\x01\n\x13\x63om.chalk.server.v1B\tKubeProtoP\x01Z\x12server/v1;serverv1\xa2\x02\x03\x43SX\xaa\x02\x0f\x43halk.Server.V1\xca\x02\x0f\x43halk\\Server\\V1\xe2\x02\x1b\x43halk\\Server\\V1\\GPBMetadata\xea\x02\x11\x43halk::Server::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Chalk
  module Server
    module V1
      GetPodStackTraceDumpRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetPodStackTraceDumpRequest").msgclass
      GetPodStackTraceDumpResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("chalk.server.v1.GetPodStackTraceDumpResponse").msgclass
    end
  end
end
